variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - test
  - package
  - deploy

build:
  image: gradle:alpine
  stage: build
  script: gradle --build-cache assemble
  artifacts:
    paths:
      - build
      - .gradle

docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  script:
    - docker build -t registry.gitlab.com/onkarpathak/spring-starter-gke .
    - docker login  registry.gitlab.com/onkarpathak/spring-starter-gke -u "onkarpathak833@gmail.com" -p "Onkar1712@"
    - docker push registry.gitlab.com/onkarpathak/spring-starter-gke


k8s-deploy:
  image: google/cloud-sdk
  stage: deploy
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $CLUSTER_ZONE
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $CLUSTER_NAME
    - kubectl create namespace qa 2>/dev/null || echo "namespace qa already exist"
    - kubectl config set-context --current --namespace=qa
    - kubectl delete secret test-app-registry 2>/dev/null || echo "secret does not exist"
    - kubectl create secret docker-registry test-app-registry --docker-server=https://registry.gitlab.com --docker-username=onkarpathak833@gmail.com --docker-password=Onkar1712@
    - kubectl apply -f deployment.yml
    - kubectl set image deployment/test-app test-app=$REGISTRY_IMAGE

  environment:
    name: staging
    url: http://staging/