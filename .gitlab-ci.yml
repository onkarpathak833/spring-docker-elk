variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - test
  - package
  - deploy

build:
  image: gradle:alpine
  stage: build
  script: gradle --build-cache assemble
  artifacts:
    paths:
      - build
      - .gradle

#test:
#  image: gradle:alpine
#  stage: test
#  script:
#    - gradle test jacocoTestReport
#    - cat build/reports/jacoco/test/html/index.html | grep -o 'Total[^%]*%'
#  artifacts:
#    paths:
#      - build
#      - .gradle

docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  script:
    - docker build -t registry.gitlab.com/onkarpathak/spring-starter-gke .
    - docker login  registry.gitlab.com/onkarpathak/spring-starter-gke -u "onkarpathak833@gmail.com" -p "Onkar1712@"
    - docker push registry.gitlab.com/onkarpathak/spring-starter-gke

#pages:
#  stage: deploy
#  dependencies:
#    - test
#  script:
#    - mv build/reports/jacoco/test/html/ public/
#  artifacts:
#    paths:
#      - public
#    expire_in: 30 days
#  only:
#    - master

k8s-deploy-qa:
  image: google/cloud-sdk
  stage: deploy
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $CLUSTER_ZONE
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $CLUSTER_NAME
    - kubectl create namespace qa 2>/dev/null || echo "namespace qa already exist"
    - kubectl config set-context --current --namespace=qa
    - kubectl delete secret test-app 2>/dev/null || echo "secret does not exist"
    - kubectl create secret docker-registry test-app --docker-server=https://registry.gitlab.com --docker-username=$REGISTRY_TOKEN --docker-password=$REGISTRY_PASSWD
    - kubectl apply -f deployment.yml
    - kubectl apply -f deployment-db.yml
    - kubectl set image deployment/test-app test-app=$REGISTRY_IMAGE

  environment:
    name: staging
    url: http://staging/

k8s-deploy-prod:
  image: google/cloud-sdk
  stage: deploy
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $CLUSTER_ZONE
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $CLUSTER_NAME
    - kubectl create namespace prod 2>/dev/null || echo "namespace prod already exist"
    - kubectl config set-context --current --namespace=prod
    - kubectl delete secret test-app 2>/dev/null || echo "secret does not exist"
    - kubectl create secret docker-registry test-app --docker-server=https://registry.gitlab.com --docker-username=$REGISTRY_TOKEN --docker-password=$REGISTRY_PASSWD
    - kubectl apply -f deployment.yml
    - kubectl apply -f deployment-db.yml
    - kubectl set image deployment/test-app test-app=$REGISTRY_IMAGE

  when: manual
  environment:
    name: prod
    url: http://prod/
